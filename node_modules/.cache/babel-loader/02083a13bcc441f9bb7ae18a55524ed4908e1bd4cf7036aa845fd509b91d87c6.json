{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\intel\\\\Desktop\\\\for interview\\\\front\\\\src\\\\comp\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = async props => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [file, setFile] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email);\n  };\n  const res = await fetch(\"http://localhost:3000/Register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      pass\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login-Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"xyz@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: pass,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Pass@123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"uploadFile\",\n        children: \"profilePicture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: file,\n        onChange: e => setFile(e.target.value),\n        type: \"file\",\n        name: \"profilePicture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => props.onFormSwitch('Login'),\n      children: \"Already have an account? Login here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Ge9dViGf6tbBkinGY695Mjijdls=\");\n_c = Register;\nexport default Register;\n{/* <form onSubmit={handleSubmit}>\r\n <label htmlFor=\"name\">Full name</label>\r\n <input value={name}  onChange={(e)=>setName(e.target.value)} type=\"text\" id=\"name\" placeholder=\"full name\" />\r\n <label htmlFor=\"email\">email</label>\r\n <input value={email}  onChange={(e)=>setEmail(e.target.value)} type=\"email\" id=\"email\" placeholder=\"xyz@gmail.com\"/>\r\n <label htmlFor=\"password\">password</label>\r\n <input value={pass}  onChange={(e)=>setPass(e.target.value)}type=\"password\" id=\"password\" placeholder=\"Pass@123\"/>\r\n <button type=\"submit\">Register</button>\r\n </form>\r\n <button onClick={()=> props.onFormSwitch('Login')}>Already have an account? Login here.</button> */}\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","props","name","setName","email","setEmail","pass","setPass","file","setFile","handleSubmit","e","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","target","value","onFormSwitch"],"sources":["C:/Users/intel/Desktop/for interview/front/src/comp/Register.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst Register=async (props)=>{\r\n    const [name,setName]=useState('');\r\n    const [email,setEmail]=useState('');\r\n    const [pass, setPass]=useState('');\r\n    const [file,setFile]=useState('');\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n         console.log(email)\r\n     }\r\n\r\n     const res= await fetch(\"http://localhost:3000/Register\",{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n          name,email,pass,\r\n        })\r\n    \r\n       })\r\n    \r\n\r\n\r\n return (\r\n\r\n    \r\n    <div className=\"Login-Container\">\r\n        <h2>Register</h2>\r\n    <form className=\"Register-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Full name</label>\r\n        <input value={name} onChange={(e)=>setName(e.target.value)} type=\"text\" id=\"name\" placeholder=\"full name\" />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input value={email} onChange={(e)=>setEmail(e.target.value)} type=\"email\" id=\"email\" placeholder=\"xyz@gmail.com\"/>\r\n        <label htmlFor=\"Password\">password</label>\r\n        <input value={pass} onChange={(e)=>setPass(e.target.value)}type=\"password\" id=\"password\" placeholder=\"Pass@123\"/>\r\n        <label htmlFor=\"uploadFile\">profilePicture</label>\r\n        <input value={file} onChange={(e)=>setFile(e.target.value)} type=\"file\" name=\"profilePicture\"></input>\r\n        <button type=\"submit\">Register</button>\r\n    </form>\r\n    <button className=\"link-btn\" onClick={()=> props.onFormSwitch('Login')}>Already have an account? Login here.</button>\r\n    </div>\r\n    \r\n )\r\n\r\n\r\n}\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <form onSubmit={handleSubmit}>\r\n<label htmlFor=\"name\">Full name</label>\r\n<input value={name}  onChange={(e)=>setName(e.target.value)} type=\"text\" id=\"name\" placeholder=\"full name\" />\r\n<label htmlFor=\"email\">email</label>\r\n<input value={email}  onChange={(e)=>setEmail(e.target.value)} type=\"email\" id=\"email\" placeholder=\"xyz@gmail.com\"/>\r\n<label htmlFor=\"password\">password</label>\r\n<input value={pass}  onChange={(e)=>setPass(e.target.value)}type=\"password\" id=\"password\" placeholder=\"Pass@123\"/>\r\n<button type=\"submit\">Register</button>\r\n</form>\r\n<button onClick={()=> props.onFormSwitch('Login')}>Already have an account? Login here.</button> */}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}